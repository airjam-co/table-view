{"version":3,"file":"library.min.js","sources":["../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.js","../node_modules/chart.js/auto/auto.js","../node_modules/@airjam/types/dist/library.es.js","../src/library.ts"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.2.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.2.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","var ViewComponentType;\r\n(function (ViewComponentType) {\r\n    ViewComponentType[\"TableView\"] = \"table_view\";\r\n})(ViewComponentType || (ViewComponentType = {}));\r\nvar ViewType;\r\n(function (ViewType) {\r\n    ViewType[\"Board\"] = \"view_board\";\r\n    ViewType[\"List\"] = \"view_list\";\r\n    ViewType[\"Gallery\"] = \"view_gallery\";\r\n    ViewType[\"Graph\"] = \"view_graph\";\r\n    ViewType[\"Table\"] = \"view_table\";\r\n})(ViewType || (ViewType = {}));\r\nvar PaginationStyle;\r\n(function (PaginationStyle) {\r\n    PaginationStyle[\"Paged\"] = \"pagination_paged\";\r\n    PaginationStyle[\"InfiniteScroll\"] = \"pagination_infinite\";\r\n    PaginationStyle[\"NoPagination\"] = \"pagination_none\";\r\n})(PaginationStyle || (PaginationStyle = {}));\r\nvar DataSourceFieldType;\r\n(function (DataSourceFieldType) {\r\n    DataSourceFieldType[\"Text\"] = \"text\";\r\n    DataSourceFieldType[\"Number\"] = \"number\";\r\n    DataSourceFieldType[\"DateTime\"] = \"datetime\";\r\n    DataSourceFieldType[\"Currency\"] = \"currency\";\r\n    DataSourceFieldType[\"Percent\"] = \"percent\";\r\n    DataSourceFieldType[\"Link\"] = \"link\";\r\n    DataSourceFieldType[\"Email\"] = \"email\";\r\n})(DataSourceFieldType || (DataSourceFieldType = {}));\r\nvar SortBy;\r\n(function (SortBy) {\r\n    SortBy[\"RECENT\"] = \"recent\";\r\n    SortBy[\"OLDEST\"] = \"oldest\";\r\n})(SortBy || (SortBy = {}));\r\nfunction formattedField(data, displayType) {\r\n    switch (displayType) {\r\n        case DataSourceFieldType.Number:\r\n            return Number(data).toString();\r\n        case DataSourceFieldType.Percent:\r\n            return Number(data).toLocaleString(undefined, { style: \"percent\", minimumFractionDigits: 2 });\r\n        case DataSourceFieldType.DateTime:\r\n            var newDate = new Date(data);\r\n            return newDate.toLocaleDateString();\r\n        case DataSourceFieldType.Currency:\r\n            var currencyFractionDigits = new Intl.NumberFormat(undefined, {\r\n                style: \"currency\",\r\n                currency: \"USD\", // todo: somehow make this smarter\r\n            }).resolvedOptions().maximumFractionDigits;\r\n            var currencyString = Number(data).toLocaleString(undefined, {\r\n                maximumFractionDigits: currencyFractionDigits\r\n            });\r\n            return currencyString;\r\n        case DataSourceFieldType.Link:\r\n        case DataSourceFieldType.Email:\r\n        case DataSourceFieldType.Text:\r\n        default:\r\n            return data;\r\n    }\r\n}\r\nfunction inferDataSourceFieldType(data) {\r\n    // in the order of uniqueness -> Email, Link, DateTime, (Currency, Percent, Number), Text\r\n    if (isEmail(data))\r\n        return DataSourceFieldType.Email;\r\n    if (isUri(data))\r\n        return DataSourceFieldType.Link;\r\n    if (isDate(data))\r\n        return DataSourceFieldType.DateTime;\r\n    // currency and percent are not inferrable\r\n    if (!isNaN(parseFloat(data)))\r\n        return DataSourceFieldType.Number;\r\n    return DataSourceFieldType.Text;\r\n}\r\nfunction isEmail(email) {\r\n    var re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return re.test(email);\r\n}\r\nfunction isUri(uriStr) {\r\n    try {\r\n        return Boolean(new URL(uriStr));\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n}\r\nfunction isDate(dateStr) {\r\n    return !isNaN(new Date(dateStr).getDate());\r\n}\r\nvar template_cache = {\r\n    \"card_list\": {\r\n        _id: \"\",\r\n        shortId: \"card_list\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.List, ViewType.Gallery],\r\n        name: \"Card List\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"card list.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        properties: {},\r\n        templateContent: \"<div class='container'><span class='title'>{{title}}</span><span class='image'><img src='{{thumbnail}}'/></span><span class='description'>{{description}}</span><span><a href='{{link}}'>{{linkText}}</a></span></div>\",\r\n        templateFields: {\r\n            title: {\r\n                name: \"Title\",\r\n                description: \"title\",\r\n                compatibleTypes: [], //empty for all\r\n            },\r\n            link: {\r\n                name: \"Link\",\r\n                description: \"Link to open\",\r\n                compatibleTypes: [DataSourceFieldType.Link]\r\n            },\r\n            linkText: {\r\n                name: \"Link Text\",\r\n                description: \"Link text\",\r\n                compatibleTypes: [],\r\n            },\r\n            thumbnail: {\r\n                name: \"Thumbnail image\",\r\n                description: \"thumbnail image\",\r\n                compatibleTypes: [DataSourceFieldType.Link],\r\n            },\r\n            description: {\r\n                name: \"Description\",\r\n                description: \"descriptions\",\r\n                compatibleTypes: [],\r\n            }\r\n        },\r\n        componentProperties: {}\r\n    },\r\n    \"standard_table\": {\r\n        _id: \"\",\r\n        shortId: \"standard_table\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.Table],\r\n        name: \"Standard Table\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"table, as shown on the sheet itself.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        templateContent: \"\",\r\n        templateFields: {},\r\n        properties: {\r\n            caption: {\r\n                name: \"Caption\",\r\n                description: \"Use component's title as a caption\",\r\n                default: false,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            striped: {\r\n                name: \"Striped rows\",\r\n                description: \"Do row colors alternate\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n        },\r\n        componentProperties: {}\r\n    },\r\n    \"barchart\": {\r\n        _id: \"\",\r\n        shortId: \"barchart\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.Graph],\r\n        name: \"Bar Chart\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"bar chart, rows must be horizontal and data in the second row to work.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        templateContent: \"\",\r\n        templateFields: {},\r\n        properties: {\r\n            useFirstColumnAsLabels: {\r\n                name: \"First Column is Labels\",\r\n                description: \"Use first column as labels\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showLegends: {\r\n                name: \"Show Legends\",\r\n                description: \"Show legends of labels in the graph\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showVertically: {\r\n                name: \"ShowVertically\",\r\n                description: \"Display graph vertically, rather than horizontally\",\r\n                default: false,\r\n                type: \"BOOLEAN\"\r\n            }\r\n        },\r\n        componentProperties: {\r\n            chartType: \"bar\"\r\n        }\r\n    },\r\n    \"piechart\": {\r\n        _id: \"\",\r\n        shortId: \"piechart\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.Graph],\r\n        name: \"Pie Chart\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"pie chart, rows must be horizontal and data in the second row to work.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        templateContent: \"\",\r\n        templateFields: {},\r\n        properties: {\r\n            useFirstColumnAsLabels: {\r\n                name: \"First Column is Labels\",\r\n                description: \"Use first column as labels\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showLegends: {\r\n                name: \"Show Legends\",\r\n                description: \"Show legends of labels in the graph\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showVertically: {\r\n                name: \"ShowVertically\",\r\n                description: \"Display graph vertically, rather than horizontally\",\r\n                default: false,\r\n                type: \"BOOLEAN\"\r\n            }\r\n        },\r\n        componentProperties: {\r\n            chartType: \"pie\"\r\n        }\r\n    },\r\n    \"linechart\": {\r\n        _id: \"\",\r\n        shortId: \"linechart\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.Graph],\r\n        name: \"Line Chart\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"line chart, rows must be horizontal and data in the second row to work.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        templateContent: \"\",\r\n        templateFields: {},\r\n        properties: {\r\n            useFirstColumnAsLabels: {\r\n                name: \"First Column is Labels\",\r\n                description: \"Use first column as labels\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showLegends: {\r\n                name: \"Show Legends\",\r\n                description: \"Show legends of labels in the graph\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showVertically: {\r\n                name: \"ShowVertically\",\r\n                description: \"Display graph vertically, rather than horizontally\",\r\n                default: false,\r\n                type: \"BOOLEAN\"\r\n            }\r\n        },\r\n        componentProperties: {\r\n            chartType: \"line\"\r\n        }\r\n    }\r\n};\r\nvar style_cache = {\r\n    \"muted\": {\r\n        _id: \"\",\r\n        shortId: \"muted\",\r\n        name: \"Muted\",\r\n        compatibleWith: [\"barchart\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"single green color theme set\",\r\n        visibility: \"PUBLIC\",\r\n        style: \".muted>.table>tbody>tr:nth-child(odd)>td, .muted>.table>tbody>tr:nth-child(odd)>th { background-color: #F9F9FB; } .muted>.table th { font-size: smaller; color: #23262E; } .muted>.table>tbody>tr, .muted>.table>thead>tr { border: 0px solid transparent }\",\r\n        containerClassNames: [\"muted\"],\r\n        properties: {\r\n            borderWidth: {\r\n                name: \"Border Width\",\r\n                description: \"Border width\",\r\n                default: 1,\r\n                type: \"NUMBER\"\r\n            },\r\n            chartColors: {\r\n                name: \"Chart Colors\",\r\n                description: \"Chart colors\",\r\n                default: [\"#D79922\", \"#EFE2BA\", \"#F13C20\", \"#4056A1\", \"#C5CBE3\"],\r\n                type: \"COLOR\",\r\n                multiple: true,\r\n                limit: 50\r\n            }\r\n        },\r\n        colorTheme: [\"#D79922\", \"#EFE2BA\", \"#F13C20\", \"#4056A1\", \"#C5CBE3\"],\r\n        componentProperties: {\r\n            borderWidth: 1,\r\n        }\r\n    },\r\n    \"earthy\": {\r\n        _id: \"\",\r\n        shortId: \"earthy\",\r\n        name: \"Earthy\",\r\n        compatibleWith: [\"barchart\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"single green color theme set\",\r\n        visibility: \"PUBLIC\",\r\n        style: \".earthy>.table { border: 0.1em solid #E1E0E2; border-radius: 10px !important; border-collapse: separate; border-spacing: 0; overflow: hidden; } .earthy>.table thead { background-color: #F9FBFC; } .earthy>.table th { font-size: smaller; color: #828286; } .earthy>.table>tbody>tr, .earthy>.table>thead>tr { border-color: #F6F5F8 } .earthy>.table>tbody>tr:last-child { border: 0px solid transparent }\",\r\n        containerClassNames: [\"earthy\"],\r\n        properties: {\r\n            borderWidth: {\r\n                name: \"Border Width\",\r\n                description: \"Border width\",\r\n                default: 1,\r\n                type: \"NUMBER\"\r\n            },\r\n            chartColors: {\r\n                name: \"Chart Colors\",\r\n                description: \"Chart colors\",\r\n                default: [\"#E27D60\", \"#85CDCA\", \"#E8A87C\", \"#C38D9E\", \"#41B3A3\"],\r\n                type: \"COLOR\",\r\n                multiple: true,\r\n                limit: 50\r\n            }\r\n        },\r\n        colorTheme: [\"#E27D60\", \"#85CDCA\", \"#E8A87C\", \"#C38D9E\", \"#41B3A3\"],\r\n        componentProperties: {\r\n            borderWidth: 1,\r\n        }\r\n    },\r\n    \"outback\": {\r\n        _id: \"\",\r\n        shortId: \"outback\",\r\n        name: \"Outback\",\r\n        compatibleWith: [\"barchart\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"single green color theme set\",\r\n        visibility: \"PUBLIC\",\r\n        style: \".outback>.table th { font-size: smaller; color: #23262E; } .outback>.table>thead>tr { border: 0px solid transparent; border-top: 1px solid #EAE9EE; }\",\r\n        containerClassNames: [\"outback\"],\r\n        properties: {\r\n            borderWidth: {\r\n                name: \"Border Width\",\r\n                description: \"Border width\",\r\n                default: 1,\r\n                type: \"NUMBER\"\r\n            },\r\n            chartColors: {\r\n                name: \"Chart Colors\",\r\n                description: \"Chart colors\",\r\n                default: [\"#8D8741\", \"#659DBD\", \"#DAAD86\", \"#BC986A\", \"#FBEEC1\", \"#C3C078\", \"#9978C3\", \"#82C378\", \"#DE67A0\"],\r\n                type: \"COLOR\",\r\n                multiple: true,\r\n                limit: 50\r\n            }\r\n        },\r\n        colorTheme: [\"#8D8741\", \"#659DBD\", \"#DAAD86\", \"#BC986A\", \"#FBEEC1\", \"#C3C078\", \"#9978C3\", \"#82C378\", \"#DE67A0\"],\r\n        componentProperties: {\r\n            borderWidth: 1\r\n        }\r\n    },\r\n    \"concise_gallery\": {\r\n        _id: \"\",\r\n        shortId: \"concise_gallery\",\r\n        name: \"Concise gallery list\",\r\n        compatibleWith: [\"card_list\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Concision is the key.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \".concise_gallery .container { display: inline-grid; padding: 10px; width: 300px; border: 1px solid #ddd; border-radius: 10px; margin: 5px; } .concise_gallery .container .title { font-size: 1.2 rem; font-weight: 600; }  .concise_gallery .container .image img { width: 100% } .concise_gallery .container .description { display: block } .concise_gallery .pagination a, .concise_gallery .pagination span { margin: 2px; padding: 3px; }\",\r\n        containerClassNames: [\"concise_gallery\"],\r\n        colorTheme: [\"#ddd\"],\r\n        properties: {},\r\n        componentProperties: {}\r\n    }\r\n};\n\nexport { DataSourceFieldType, PaginationStyle, SortBy, ViewComponentType, ViewType, formattedField, inferDataSourceFieldType, isDate, isEmail, isUri, style_cache, template_cache };\n//# sourceMappingURL=library.es.js.map\n","import Chart from 'chart.js/auto';\nimport { ChartType } from \"chart.js\";\nimport { dataField, tableViewResponse, DataSourceFieldType, PaginationStyle, ViewType, template_cache, style_cache } from \"@airjam/types\";\n\n// const SERVING_DATA_URL: string = \"http://airjam.co/s/data?id=\";\nconst SERVING_DATA_URL: string = \"http://localhost:3001/s/data?id=\";\nconst PAGINATION_SHOW_SIZE: number = 7;\nlet currentPage: {[id: string]: number} = {}; // global variable that keeps track of current page.\n\nexport default function fetchAndRenderData() {\n  if (window && window.document) {\n    const tableViews = document.querySelectorAll('[display=\"airjam-tableview\"]');\n    tableViews.forEach(view => {\n      if (!view.getAttribute(\"id\")) {\n        view.innerHTML = \"Please set id attribute to a valid table view id.\";\n        return;\n      }\n      const viewId = view.getAttribute(\"id\")!;\n      const page: number = 1;\n      currentPage[viewId] = 1;\n      fetch(SERVING_DATA_URL + viewId + \"&page=\" + page).then(result => {\n        result.json().then((fetchedData: tableViewResponse) => {\n          const template = getTemplate(fetchedData);\n          const style = getStyle(fetchedData);\n          if (style.containerClassNames && Array.isArray(style.containerClassNames)) view.className += \" \" + style.containerClassNames.join(\" \");\n          const styleElement = document.createElement('style');\n          styleElement.appendChild(window.document.createTextNode(style.style));\n          window.document.head.appendChild(styleElement);\n          const viewType = ViewType[fetchedData.type.valueOf() as keyof typeof ViewType];\n          switch(viewType) {\n            case ViewType.Graph:\n              renderGraphToView(viewId, view, fetchedData, template, style);\n              break;\n            case ViewType.Table:\n              renderTableToView(viewId, view, fetchedData, template, style);\n              break;\n            case ViewType.List:\n            case ViewType.Gallery:\n              renderCollectionToView(viewId, view, fetchedData, template, style);\n              break;\n            default:\n              // not yet implemented\n          }\n        });\n      });\n    });\n  }\n}\n\nfunction fetchAndRerenderData(viewId: string, view: Element, page: number = 1) {\n  if (window && window.document) {\n    currentPage[viewId] = page;\n    fetch(SERVING_DATA_URL + viewId + \"&page=\" + page).then(result => {\n      result.json().then((fetchedData: tableViewResponse) => {\n        const template = getTemplate(fetchedData);\n        const style = getStyle(fetchedData);\n        view.innerHTML = \"\"; // clear out just the content and reload\n        const viewType = ViewType[fetchedData.type.valueOf() as keyof typeof ViewType];\n        switch(viewType) {\n          case ViewType.Graph:\n            renderGraphToView(viewId, view, fetchedData, template, style);\n            break;\n          case ViewType.Table:\n            renderTableToView(viewId, view, fetchedData, template, style);\n            break;\n          case ViewType.List:\n          case ViewType.Gallery:\n            renderCollectionToView(viewId, view, fetchedData, template, style);\n            break;\n          default:\n            // not yet implemented\n        }\n      });\n    });\n  }\n}\n\nfunction renderCollectionToView(viewId: string, view: Element, fetchedData: tableViewResponse, template: any, style: any) {\n  if (!template.templateFields || !template.templateContent || !fetchedData.templateFields) {\n    console.log(viewId + \" will not be rendered because it does not have required template attributes.\");\n    return;\n  }\n  // ignore the first row in data, since it is assumed to be a label row\n  for (let i = 1; i < fetchedData.data.length; i++) {\n    const currentRow = fetchedData.data[i];\n    const templateMap: {[id: string]: string} = {};\n    Object.keys(template.templateFields).forEach((field: string) => {\n      if (fetchedData.templateFields[field] && currentRow[fetchedData.templateFields[field]]) {\n        templateMap[field] = currentRow[fetchedData.templateFields[field]].raw_value;\n      }\n    });\n\n    let templateContent = template.templateContent;\n    Object.entries(templateMap).forEach((entry: any[]) => {\n      const key = entry[0];\n      const value = entry[1];\n      templateContent = templateContent.replaceAll( \"{{\" + key + \"}}\", value); // todo templating engine will allow pass by map\n    });\n    view.innerHTML += templateContent;\n    }\n    if (fetchedData.paginationStyle === PaginationStyle.Paged) {\n      renderPagination(viewId, view, fetchedData);\n    }\n}\n\nfunction renderPagination(viewId: string, view: Element, fetchedData: tableViewResponse) {\n  const pagingSection = window.document.createElement(\"div\");\n  pagingSection.className = \"pagination\";\n  view.appendChild(pagingSection);\n  let leftPtr = currentPage[viewId] ? currentPage[viewId] : 1;\n  let rightPtr = currentPage[viewId] ? currentPage[viewId] : 1;\n  if (fetchedData.totalPages <= PAGINATION_SHOW_SIZE) {\n    leftPtr = 1;\n    rightPtr = fetchedData.totalPages;\n  } else {\n    let pagesLeft = PAGINATION_SHOW_SIZE;\n    while (pagesLeft > 0) {\n      if (leftPtr > 1) { leftPtr--; pagesLeft--; }\n      if (rightPtr <= fetchedData.totalPages) { rightPtr++; pagesLeft--; }\n    }\n  }\n\n  pagingSection.appendChild(makePageLink(viewId, view, 1, \"<<\"));\n  for (let i = 1; i <= fetchedData.totalPages; i++) {\n    pagingSection.appendChild(makePageLink(viewId, view, i, null));\n  }\n  pagingSection.appendChild(makePageLink(viewId, view, fetchedData.totalPages, \">>\"));\n}\n\nfunction makePageLink(viewId: string, view: Element, pageNumber: number, linkText: string | null): Element {\n  if (currentPage[viewId] === pageNumber) {\n    const textElement = window.document.createElement(\"span\");\n    textElement.innerText = pageNumber.toString();\n    if (linkText) textElement.innerText = linkText;\n    return textElement;\n  } else {\n    const linkElement = window.document.createElement(\"a\");\n    linkElement.onclick = function() { fetchAndRerenderData(viewId, view, pageNumber); };\n    linkElement.innerText = pageNumber.toString();\n    if (linkText) linkElement.innerText = linkText;\n    linkElement.style.cursor = \"pointer\";\n    return linkElement\n  }\n}\n\nfunction renderTableToView(viewId: string, view: Element, fetchedData: tableViewResponse, template: any, style: any) {\n  let caption: string = \"\";\n  if (fetchedData.templateProperties && fetchedData.templateProperties.caption) {\n    caption = fetchedData.templateProperties.caption;\n  }\n  let striped: boolean = false;\n  if (fetchedData.templateProperties && fetchedData.templateProperties.striped) {\n    striped = fetchedData.templateProperties.striped.toLowerCase() === \"true\";\n  }\n  const dataMatrix = dataToTableMatrix(fetchedData);\n  if (dataMatrix && dataMatrix.length) {\n    let table = window.document.createElement(\"table\");\n    table.className=\"table table-hover\";\n    if (striped) table.className += \" table-striped \";\n    view.appendChild(table);\n    if (caption) {\n      let captionElem = window.document.createElement(\"caption\");\n      captionElem.innerHTML = caption;\n    }\n    let tableHead = window.document.createElement(\"thead\");\n    let tableBody = window.document.createElement(\"tbody\");\n    table.appendChild(tableHead);\n    table.appendChild(tableBody);\n    dataMatrix.forEach((dataRow: any[], rowIdx: number) => {\n      let tableRow = window.document.createElement(\"tr\");\n      tableRow.className = evenOrOdd(rowIdx + 1);\n      if (rowIdx === 0) {\n        tableHead.appendChild(tableRow);\n      } else {\n        tableBody.appendChild(tableRow);\n      }\n      dataRow.forEach((data: any, colIdx: number) => {\n        let cell = rowIdx === 0 ? window.document.createElement(\"th\") : window.document.createElement(\"td\");\n        cell.appendChild(renderData(data));\n        cell.className = evenOrOdd(colIdx + 1);\n        tableRow.appendChild(cell);\n      });\n    });\n  }\n}\n\nfunction renderData(data: dataField): HTMLElement {\n  // todo(minjae): add more data renderer for data types\n  const span = window.document.createElement(\"span\");\n  switch(data.display_as) {\n    case DataSourceFieldType.Link:\n      const linkElement = window.document.createElement(\"a\");\n      linkElement.href = data.raw_value;\n      linkElement.innerText = data.raw_value;\n      span.appendChild(linkElement);\n      break;\n    default:\n      span.innerText = data.raw_value;\n  }\n  return span;\n}\n\nfunction renderGraphToView(viewId: string, view: Element, fetchedData: tableViewResponse, template: any, style: any) {\n  if (!template.compatibleDisplayType || !Array.isArray(template.compatibleDisplayType)) return;\n  if (template.compatibleDisplayType.filter((t: string) => t === \"graph\")) {\n    renderChartToView(viewId, view, fetchedData, template, style);\n  }\n}\n\nfunction renderChartToView(viewId: string, view: Element, fetchedData: tableViewResponse, template: any, style: any) {\n  // initiate template and style data\n  let chartType : ChartType = \"bar\";\n  if (template.componentProperties && template.componentProperties.chartType) chartType = template.componentProperties.chartType;\n  let firstColumnAsLabel = (fetchedData.templateProperties && fetchedData.templateProperties.useFirstColumnAsLabels && fetchedData.templateProperties.useFirstColumnAsLabels as Boolean);\n  let showLegends: boolean = true;\n  if (fetchedData.templateProperties && fetchedData.templateProperties.showLegends && (fetchedData.templateProperties.showLegends.toLowerCase() === \"false\")) {\n    showLegends = false;\n  }\n  let indexAxis: \"x\" | \"y\" = \"x\";\n  if (fetchedData.templateProperties && fetchedData.templateProperties.showVertically && fetchedData.templateProperties.showVertically.toString().toLowerCase() === \"true\") {\n    indexAxis = \"y\";\n  }\n  let borderWidth = 0;\n  if (style.componentProperties && style.componentProperties.borderWidth) borderWidth = Number(style.componentProperties.borderWidth);\n  let chartColors: string[] = [];\n  if (style.componentProperties && style.componentProperties.chartColors && Array.isArray(style.componentProperties.chartColors)) chartColors = style.componentProperties.chartColors;\n\n  // if fetchedData view as graph, and properties client component is chart\n  const dataMatrix = dataToTableMatrix(fetchedData);\n  if (dataMatrix && dataMatrix.length) {\n    // first row is assumed to be labels for this component\n    const labelRow = dataMatrix[0].map((value: dataField) => {\n      return value.raw_value;\n    });\n    const dataRows = [];\n    for (let i = 1; i < dataMatrix.length; i++) {\n      const dataArr = dataMatrix[i].map((value: dataField) => {\n        return value.raw_value;\n      });\n      fetchedData.data.forEach(() => { chartColors = rotateArray(chartColors, true) }); // rotate the colors far enough to hopefully not get duplicates\n      dataRows.push({\n          label: firstColumnAsLabel ? dataArr[0] : undefined,\n          data: firstColumnAsLabel ? dataArr.slice(1) : dataArr,\n          borderWidth: borderWidth,\n          borderColor: chartColors.slice(),\n          backgroundColor: chartColors.slice()\n      });\n    }\n    let canvas = window.document.createElement(\"canvas\");\n    canvas.id = viewId;\n    view.appendChild(canvas);\n    const chart = new Chart(canvas, {\n      type: chartType,\n      data: {\n        labels: firstColumnAsLabel ? labelRow.slice(1) : labelRow,\n        datasets: dataRows,\n      },\n      options: {\n        indexAxis: indexAxis,\n        plugins: {\n          legend: {\n            display: showLegends\n          }\n        }\n      }\n    });\n  }\n}\n\nfunction dataToTableMatrix(fetchedData: tableViewResponse): dataField[][] {\n  const dataRows: dataField[][] = [];\n  if (fetchedData.data && fetchedData.data.length) {\n    const keys = Object.keys(fetchedData.data[0]);\n    const keyMap: {[id: string]: number} = {};\n    keys.forEach((key: string, index: number) => { keyMap[key] = index });\n    fetchedData.data.forEach((currentDataRow: {[id: string]: dataField}) => {\n      const rowData: dataField[] = [];\n      Object.entries(currentDataRow).forEach((entry: any[]) => {\n        rowData[keyMap[entry[0]]] = entry[1];\n      });\n      dataRows.push(rowData);\n    });\n  }\n  return dataRows;\n}\n\nfunction itemInRotatingWindow(window: any[], index: number): any {\n  return window.length ? window[(index - 1) % window.length] : undefined\n}\n\nfunction evenOrOdd(index: number): string {\n  return index % 2 ? \"odd\" : \"even\";\n}\n\nfunction rotateArray(arr: any[], reverse: boolean): any[] {\n  if (reverse) arr.unshift(arr.pop());\n  else arr.push(arr.shift());\n  return arr;\n}\n\nfunction getTemplate(fetchedData: tableViewResponse): any {\n  const cached_entry = Object.entries(template_cache).filter(value => value[0] === fetchedData.templateId);\n  if (cached_entry && cached_entry[0] && cached_entry[0].length > 1) {\n    return cached_entry[0][1];\n  }\n  // return the template data response returned itself.\n}\n\nfunction getStyle(fetchedData: tableViewResponse): any {\n  const cached_entry = Object.entries(style_cache).filter(value => value[0] === fetchedData.styleId);\n  if (cached_entry && cached_entry[0] && cached_entry[0].length > 1) {\n    return cached_entry[0][1];\n  }\n  // return the style data response returned itself.\n}\n\nfetchAndRenderData();"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRtlAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","_top","_bottom","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","startEnd","swap","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","positionAxisID1","value1","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","i1","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","hLimits","vLimits","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","ViewComponentType","ViewType","PaginationStyle","DataSourceFieldType","SortBy","template_cache","card_list","_id","shortId","compatibleWith","compatibleDisplayType","List","Gallery","ownerId","previewImageUrls","description","visibility","pages","templateContent","templateFields","compatibleTypes","link","Link","linkText","thumbnail","componentProperties","standard_table","Table","caption","default","striped","barchart","Graph","useFirstColumnAsLabels","showLegends","showVertically","chartType","piechart","linechart","style_cache","muted","containerClassNames","chartColors","multiple","colorTheme","earthy","outback","concise_gallery","SERVING_DATA_URL","PAGINATION_SHOW_SIZE","currentPage","fetchAndRenderData","querySelectorAll","view","viewId","fetch","json","fetchedData","template","getTemplate","className","styleElement","createElement","appendChild","createTextNode","valueOf","renderGraphToView","renderTableToView","renderCollectionToView","innerHTML","fetchAndRerenderData","page","currentRow","templateMap","field","raw_value","replaceAll","paginationStyle","Paged","renderPagination","log","pagingSection","leftPtr","rightPtr","totalPages","pagesLeft","makePageLink","pageNumber","textElement","innerText","linkElement","onclick","templateProperties","dataMatrix","dataToTableMatrix","tableHead_1","tableBody_1","dataRow","rowIdx","tableRow","evenOrOdd","colIdx","cell","renderData","display_as","href","renderChartToView","firstColumnAsLabel","labelRow","dataRows","dataArr","rotateArray","keyMap_1","currentDataRow","rowData","cached_entry","templateId","styleId"],"mappings":"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"}