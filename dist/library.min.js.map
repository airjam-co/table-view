{"version":3,"file":"library.min.js","sources":["../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.js","../node_modules/chart.js/auto/auto.js","../node_modules/@airjam/types/dist/library.es.js","../src/library.ts"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.2.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.2.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","var ViewComponentType;\r\n(function (ViewComponentType) {\r\n    ViewComponentType[\"TableView\"] = \"table_view\";\r\n})(ViewComponentType || (ViewComponentType = {}));\r\n//     Board = \"view_board\", not used, for now.\r\nvar ViewType;\r\n(function (ViewType) {\r\n    ViewType[\"List\"] = \"view_list\";\r\n    ViewType[\"Gallery\"] = \"view_gallery\";\r\n    ViewType[\"Graph\"] = \"view_graph\";\r\n    ViewType[\"Table\"] = \"view_table\";\r\n})(ViewType || (ViewType = {}));\r\nvar PaginationStyle;\r\n(function (PaginationStyle) {\r\n    PaginationStyle[\"Paged\"] = \"pagination_paged\";\r\n    PaginationStyle[\"InfiniteScroll\"] = \"pagination_infinite\";\r\n    PaginationStyle[\"NoPagination\"] = \"pagination_none\";\r\n})(PaginationStyle || (PaginationStyle = {}));\r\nvar DataSourceFieldType;\r\n(function (DataSourceFieldType) {\r\n    DataSourceFieldType[\"Text\"] = \"text\";\r\n    DataSourceFieldType[\"Number\"] = \"number\";\r\n    DataSourceFieldType[\"DateTime\"] = \"datetime\";\r\n    DataSourceFieldType[\"Currency\"] = \"currency\";\r\n    DataSourceFieldType[\"Percent\"] = \"percent\";\r\n    DataSourceFieldType[\"Link\"] = \"link\";\r\n    DataSourceFieldType[\"Email\"] = \"email\";\r\n})(DataSourceFieldType || (DataSourceFieldType = {}));\r\nvar SortBy;\r\n(function (SortBy) {\r\n    SortBy[\"RECENT\"] = \"recent\";\r\n    SortBy[\"OLDEST\"] = \"oldest\";\r\n})(SortBy || (SortBy = {}));\r\nfunction formattedField(data, displayType) {\r\n    switch (displayType) {\r\n        case DataSourceFieldType.Number:\r\n            return Number(data).toString();\r\n        case DataSourceFieldType.Percent:\r\n            return Number(data).toLocaleString(undefined, { style: \"percent\", minimumFractionDigits: 2 });\r\n        case DataSourceFieldType.DateTime:\r\n            var newDate = new Date(data);\r\n            return newDate.toLocaleDateString();\r\n        case DataSourceFieldType.Currency:\r\n            var currencyFractionDigits = new Intl.NumberFormat(undefined, {\r\n                style: \"currency\",\r\n                currency: \"USD\", // todo: somehow make this smarter\r\n            }).resolvedOptions().maximumFractionDigits;\r\n            var currencyString = Number(data).toLocaleString(undefined, {\r\n                maximumFractionDigits: currencyFractionDigits\r\n            });\r\n            return currencyString;\r\n        case DataSourceFieldType.Link:\r\n        case DataSourceFieldType.Email:\r\n        case DataSourceFieldType.Text:\r\n        default:\r\n            return data;\r\n    }\r\n}\r\nfunction inferDataSourceFieldType(data) {\r\n    // in the order of uniqueness -> Email, Link, DateTime, (Currency, Percent, Number), Text\r\n    if (isEmail(data))\r\n        return DataSourceFieldType.Email;\r\n    if (isUri(data))\r\n        return DataSourceFieldType.Link;\r\n    if (isDate(data))\r\n        return DataSourceFieldType.DateTime;\r\n    // currency and percent are not inferrable\r\n    if (!isNaN(parseFloat(data)))\r\n        return DataSourceFieldType.Number;\r\n    return DataSourceFieldType.Text;\r\n}\r\nfunction isEmail(email) {\r\n    var re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return re.test(email);\r\n}\r\nfunction isUri(uriStr) {\r\n    try {\r\n        return Boolean(new URL(uriStr));\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n}\r\nfunction isDate(dateStr) {\r\n    return !isNaN(new Date(dateStr).getDate());\r\n}\r\nvar template_cache = {\r\n    \"card_list\": {\r\n        _id: \"\",\r\n        shortId: \"card_list\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.List, ViewType.Gallery],\r\n        name: \"Card List\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [\"/images/templates/card_list.png\"],\r\n        description: \"This template displays each row of data as a card, with a title, an image, and a link to redirect to.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        properties: {},\r\n        templateContent: \"<div class='container'><span class='title'>{{title}}</span><span class='image'><img src='{{thumbnail}}'/></span><span class='description'>{{description}}</span><span><a href='{{link}}'>{{linkText}}</a></span></div>\",\r\n        templateFields: {\r\n            title: {\r\n                name: \"Title\",\r\n                description: \"Title of the card item\",\r\n                compatibleTypes: [], //empty for all\r\n            },\r\n            link: {\r\n                name: \"Link\",\r\n                description: \"Link to navigate to\",\r\n                compatibleTypes: [DataSourceFieldType.Link]\r\n            },\r\n            linkText: {\r\n                name: \"Link Text\",\r\n                description: \"Text for the link\",\r\n                compatibleTypes: [],\r\n            },\r\n            thumbnail: {\r\n                name: \"Thumbnail image\",\r\n                description: \"Main image for the card\",\r\n                compatibleTypes: [DataSourceFieldType.Link],\r\n            },\r\n            description: {\r\n                name: \"Description\",\r\n                description: \"Item's description\",\r\n                compatibleTypes: [],\r\n            }\r\n        },\r\n        componentProperties: {}\r\n    },\r\n    \"standard_table\": {\r\n        _id: \"\",\r\n        shortId: \"standard_table\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.Table],\r\n        name: \"Table\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [\"/images/templates/table.png\"],\r\n        description: \"Table template shows your data in a tabular format.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        templateContent: \"\",\r\n        templateFields: {},\r\n        properties: {\r\n            caption: {\r\n                name: \"Caption\",\r\n                description: \"Use component's title as a caption\",\r\n                default: false,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            striped: {\r\n                name: \"Striped rows\",\r\n                description: \"Check to make the background colors of rows alternate\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n        },\r\n        componentProperties: {}\r\n    },\r\n    \"barchart\": {\r\n        _id: \"\",\r\n        shortId: \"barchart\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.Graph],\r\n        name: \"Bar Chart\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [\"/images/templates/barchart.png\"],\r\n        description: \"The bar chart template assumes each column in your data as a bar. Also, the data must be in numeric format to work.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        templateContent: \"\",\r\n        templateFields: {},\r\n        properties: {\r\n            useFirstColumnAsLabels: {\r\n                name: \"First Column is Labels\",\r\n                description: \"Use first column as labels\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showLegends: {\r\n                name: \"Show Legends\",\r\n                description: \"Show legends of labels in the graph\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showVertically: {\r\n                name: \"ShowVertically\",\r\n                description: \"Display graph vertically, rather than horizontally\",\r\n                default: false,\r\n                type: \"BOOLEAN\"\r\n            }\r\n        },\r\n        componentProperties: {\r\n            chartType: \"bar\"\r\n        }\r\n    },\r\n    \"piechart\": {\r\n        _id: \"\",\r\n        shortId: \"piechart\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.Graph],\r\n        name: \"Pie Chart\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [\"/images/templates/piechart.png\"],\r\n        description: \"Pie chart template uses the first two rows of your data to visualize the chart and its labels. Please note, data must be in numeric format to work.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        templateContent: \"\",\r\n        templateFields: {},\r\n        properties: {\r\n            useFirstColumnAsLabels: {\r\n                name: \"First Column is Labels\",\r\n                description: \"Use first column as labels\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showLegends: {\r\n                name: \"Show Legends\",\r\n                description: \"Show legends of labels in the graph\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showVertically: {\r\n                name: \"ShowVertically\",\r\n                description: \"Display graph vertically, rather than horizontally\",\r\n                default: false,\r\n                type: \"BOOLEAN\"\r\n            }\r\n        },\r\n        componentProperties: {\r\n            chartType: \"pie\"\r\n        }\r\n    },\r\n    \"linechart\": {\r\n        _id: \"\",\r\n        shortId: \"linechart\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.Graph],\r\n        name: \"Line Chart\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [\"/images/templates/linechart.png\"],\r\n        description: \"Line chart template requires all non-label data to be in numeric format to work.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        templateContent: \"\",\r\n        templateFields: {},\r\n        properties: {\r\n            useFirstColumnAsLabels: {\r\n                name: \"First Column is Labels\",\r\n                description: \"Use first column as labels\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showLegends: {\r\n                name: \"Show Legends\",\r\n                description: \"Show legends of labels in the graph\",\r\n                default: true,\r\n                type: \"BOOLEAN\"\r\n            },\r\n            showVertically: {\r\n                name: \"ShowVertically\",\r\n                description: \"Display graph vertically, rather than horizontally\",\r\n                default: false,\r\n                type: \"BOOLEAN\"\r\n            }\r\n        },\r\n        componentProperties: {\r\n            chartType: \"line\"\r\n        }\r\n    },\r\n    \"formal_menu\": {\r\n        _id: \"\",\r\n        shortId: \"formal_menu\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.List],\r\n        name: \"Formal Menu\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [\"/images/templates/fine_dining_menu.png\"],\r\n        description: \"This template displays data as a menu / catalog of items with prices.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        properties: {},\r\n        templateContent: \"<div class='container'><span class='name'>{{name}}</span><span class='description'>{{description}}</span><span class='price'>{{price}}</span></div>\",\r\n        templateFields: {\r\n            name: {\r\n                name: \"Name\",\r\n                description: \"Item name\",\r\n                compatibleTypes: [], //empty for all\r\n            },\r\n            price: {\r\n                name: \"Price\",\r\n                description: \"Item price\",\r\n                compatibleTypes: []\r\n            },\r\n            description: {\r\n                name: \"Description\",\r\n                description: \"Item's description\",\r\n                compatibleTypes: [],\r\n            }\r\n        },\r\n        componentProperties: {}\r\n    },\r\n    \"graphic_menu\": {\r\n        _id: \"\",\r\n        shortId: \"graphic_menu\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.Gallery],\r\n        name: \"Graphic Menu\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [\"/images/templates/boxed_list.png\", \"/images/templates/boxed_menu.png\"],\r\n        description: \"This template displays data as a menu / catalog of items with prices and images.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        properties: {},\r\n        templateContent: \"<div class='container'><span class='image'><img src='{{image}}'/></span><span class='name'>{{name}}</span><span class='price'>{{price}}</span><span class='description'>{{description}}</span></div>\",\r\n        templateFields: {\r\n            name: {\r\n                name: \"Name\",\r\n                description: \"Item name\",\r\n                compatibleTypes: [], //empty for all\r\n            },\r\n            price: {\r\n                name: \"Price\",\r\n                description: \"Item price\",\r\n                compatibleTypes: []\r\n            },\r\n            image: {\r\n                name: \"Item Image\",\r\n                description: \"Image for the item\",\r\n                compatibleTypes: [DataSourceFieldType.Link],\r\n            },\r\n            description: {\r\n                name: \"Description\",\r\n                description: \"Item's description\",\r\n                compatibleTypes: [],\r\n            }\r\n        },\r\n        componentProperties: {}\r\n    },\r\n    \"job_postings\": {\r\n        _id: \"\",\r\n        shortId: \"job_postings\",\r\n        compatibleWith: [\"table_view\"],\r\n        compatibleDisplayType: [ViewType.List],\r\n        name: \"Job Postings\",\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [\"/images/templates/job_postings.png\"],\r\n        description: \"This template displays each row of data as a card, with a title, an image, and a link to redirect to.\",\r\n        visibility: \"PUBLIC\",\r\n        pages: [\"LIST\"],\r\n        properties: {},\r\n        templateContent: \"<div class='container'><span class='title'><a href='{{link}}'>{{title}}</a></span><span class='description'>{{description}}</span></div>\",\r\n        templateFields: {\r\n            title: {\r\n                name: \"Title\",\r\n                description: \"Title of the posting\",\r\n                compatibleTypes: [], //empty for all\r\n            },\r\n            link: {\r\n                name: \"Call To Action Link\",\r\n                description: \"Link to navigate to\",\r\n                compatibleTypes: [DataSourceFieldType.Link]\r\n            },\r\n            description: {\r\n                name: \"Description\",\r\n                description: \"Short description for the posting\",\r\n                compatibleTypes: [],\r\n            }\r\n        },\r\n        componentProperties: {}\r\n    },\r\n};\r\nvar style_cache = {\r\n    \"muted\": {\r\n        _id: \"\",\r\n        shortId: \"muted\",\r\n        name: \"Muted\",\r\n        compatibleWith: [\"barchart\", \"piechart\", \"linechart\", \"standard_table\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Colors that blend in and harmonize.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \".muted>.table {text-align: left} .muted>.table>thead { font-size: 20px; background-color: #EFE2BA; } .muted>.table>tbody>tr:nth-child(odd)>td, .muted>.table>tbody>tr:nth-child(odd)>th { background-color: #f2f0e8; } .muted>.table th { font-size: smaller; color: #23262E; } .muted>.table>tbody>tr, .muted>.table>thead>tr { border: 0px solid transparent }\",\r\n        containerClassNames: [\"muted\"],\r\n        properties: {\r\n            borderWidth: {\r\n                name: \"Border Width\",\r\n                description: \"Border width\",\r\n                default: 1,\r\n                type: \"NUMBER\"\r\n            },\r\n            chartColors: {\r\n                name: \"Chart Colors\",\r\n                description: \"Chart colors\",\r\n                default: [\"#D79922\", \"#EFE2BA\", \"#F13C20\", \"#4056A1\", \"#C5CBE3\"],\r\n                type: \"COLOR\",\r\n                multiple: true,\r\n                limit: 50\r\n            }\r\n        },\r\n        colorTheme: [\"#D79922\", \"#EFE2BA\", \"#F13C20\", \"#4056A1\", \"#C5CBE3\"],\r\n        componentProperties: {\r\n            borderWidth: 1,\r\n        }\r\n    },\r\n    \"earthy\": {\r\n        _id: \"\",\r\n        shortId: \"earthy\",\r\n        name: \"Earthy\",\r\n        compatibleWith: [\"barchart\", \"piechart\", \"linechart\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Colors inspired by nature to show a calm and peaceful look.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \".earthy>.table { border: 0.1em solid #E1E0E2; border-radius: 10px !important; border-collapse: separate; border-spacing: 0; overflow: hidden; text-align: left; } .earthy>.table thead { background-color: #F9FBFC; } .earthy>.table th { font-size: smaller; color: #828286; } .earthy>.table>tbody>tr, .earthy>.table>thead>tr { border-color: #F6F5F8 } .earthy>.table>tbody>tr:last-child { border: 0px solid transparent }\",\r\n        containerClassNames: [\"earthy\"],\r\n        properties: {\r\n            borderWidth: {\r\n                name: \"Border Width\",\r\n                description: \"Border width\",\r\n                default: 1,\r\n                type: \"NUMBER\"\r\n            },\r\n            chartColors: {\r\n                name: \"Chart Colors\",\r\n                description: \"Chart colors\",\r\n                default: [\"#E27D60\", \"#85CDCA\", \"#E8A87C\", \"#C38D9E\", \"#41B3A3\"],\r\n                type: \"COLOR\",\r\n                multiple: true,\r\n                limit: 50\r\n            }\r\n        },\r\n        colorTheme: [\"#E27D60\", \"#85CDCA\", \"#E8A87C\", \"#C38D9E\", \"#41B3A3\"],\r\n        componentProperties: {\r\n            borderWidth: 1,\r\n        }\r\n    },\r\n    \"outback\": {\r\n        _id: \"\",\r\n        shortId: \"outback\",\r\n        name: \"Outback\",\r\n        compatibleWith: [\"barchart\", \"piechart\", \"linechart\", \"standard_table\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Colors inspired by sands and succulent biome.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \".outback>.table { text-align: left; } .outback>.table>thead { font-size: 20px; background-color: #FBEEC1; } .outback>.table th { font-size: smaller; color: #23262E; } .outback>.table>thead>tr { border: 0px solid transparent; } .outback>.table>tbody>tr:nth-child(odd)>td, .outback>.table>tbody>tr:nth-child(odd)>th { background-color: #faf7ec; }\",\r\n        containerClassNames: [\"outback\"],\r\n        properties: {\r\n            borderWidth: {\r\n                name: \"Border Width\",\r\n                description: \"Border width\",\r\n                default: 1,\r\n                type: \"NUMBER\"\r\n            },\r\n            chartColors: {\r\n                name: \"Chart Colors\",\r\n                description: \"Chart colors\",\r\n                default: [\"#8D8741\", \"#659DBD\", \"#DAAD86\", \"#BC986A\", \"#FBEEC1\", \"#C3C078\", \"#9978C3\", \"#82C378\", \"#DE67A0\"],\r\n                type: \"COLOR\",\r\n                multiple: true,\r\n                limit: 50\r\n            }\r\n        },\r\n        colorTheme: [\"#8D8741\", \"#659DBD\", \"#DAAD86\", \"#BC986A\", \"#FBEEC1\", \"#C3C078\", \"#9978C3\", \"#82C378\", \"#DE67A0\"],\r\n        componentProperties: {\r\n            borderWidth: 1\r\n        }\r\n    },\r\n    \"concise_gallery\": {\r\n        _id: \"\",\r\n        shortId: \"concise_gallery\",\r\n        name: \"Minimal Gallery\",\r\n        compatibleWith: [\"card_list\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Minimalistic look and feel for gallery-typed templates.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \".concise_gallery .container { display: inline-grid; padding: 10px; width: 300px; border: 1px solid #ddd; border-radius: 10px; margin: 5px; } .concise_gallery .container .title { font-size: 1.2 rem; font-weight: 600; }  .concise_gallery .container .image img { width: 100% } .concise_gallery .container .description { display: block } .concise_gallery .pagination a, .concise_gallery .pagination span { margin: 2px; padding: 3px; }\",\r\n        containerClassNames: [\"concise_gallery\"],\r\n        colorTheme: [\"#ddd\"],\r\n        properties: {},\r\n        componentProperties: {}\r\n    },\r\n    \"fine_dining\": {\r\n        _id: \"\",\r\n        shortId: \"fine_dining\",\r\n        name: \"Fine Dining Menu\",\r\n        compatibleWith: [\"formal_menu\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Traditional look and feel for menu templates.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \"@import url('https://fonts.googleapis.com/css2?family=Castoro&display=swap'); .fine_dining .container { font-family: 'Castoro', serif; display: block; padding: 10px; text-align: center } .fine_dining .container .name { font-size: 20px; }  .fine_dining .container .price { font-size: 18px; display: block; margin-top: 5px; margin-bottom: 10px } .fine_dining .container .description { display: block } .fine_dining .pagination a, .fine_dining .pagination span { margin: 2px; padding: 3px; }\",\r\n        containerClassNames: [\"fine_dining\"],\r\n        colorTheme: [\"#000\"],\r\n        properties: {},\r\n        componentProperties: {}\r\n    },\r\n    \"contemporary_fine_dining\": {\r\n        _id: \"\",\r\n        shortId: \"contemporary_fine_dining\",\r\n        name: \"Contemporary Sans\",\r\n        compatibleWith: [\"formal_menu\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Modern look and feel for fine dining menu templates.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \"@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@1,400&family=Tenor+Sans&display=swap'); .contemporary_fine_dining .container { display: block; padding: 10px; text-align: center } .contemporary_fine_dining .container .name { font-family: 'Tenor Sans', sans-serif; font-size: 20px; } .contemporary_fine_dining .container .price { font-family: 'Tenor Sans', sans-serif; font-size: 18px; display: block; margin-top: 5px; margin-bottom: 10px } .contemporary_fine_dining .container .description { font-family: 'Playfair Display', serif; font-style: italic; display: block } .contemporary_fine_dining .pagination a, .contemporary_fine_dining .pagination span { margin: 2px; padding: 3px; }\",\r\n        containerClassNames: [\"contemporary_fine_dining\"],\r\n        colorTheme: [\"#000\"],\r\n        properties: {},\r\n        componentProperties: {}\r\n    },\r\n    \"healthy_five\": {\r\n        _id: \"\",\r\n        shortId: \"healthy_five\",\r\n        name: \"Healthy Five\",\r\n        compatibleWith: [\"graphic_menu\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Vibrant style for graphic menu templates with emphasis on item image.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \"@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap'); .healthy_five .container { display: inline-block; width: 300px; padding: 10px; font-family: 'Open Sans', sans-serif; } .healthy_five .container .image img { display: block; max-width: 100%; height: auto; margin: 10px 0 5px 0; } .healthy_five .container .name { font-size: 20px; } .healthy_five .container .price { font-size: 18px; display: block; } .healthy_five .container .description { display: block } .healthy_five .pagination a, .healthy_five .pagination span { margin: 2px; padding: 3px; }\",\r\n        containerClassNames: [\"healthy_five\"],\r\n        colorTheme: [\"#000\"],\r\n        properties: {},\r\n        componentProperties: {}\r\n    },\r\n    \"menu_boxes\": {\r\n        _id: \"\",\r\n        shortId: \"menu_boxes\",\r\n        name: \"Boxed Menu\",\r\n        compatibleWith: [\"graphic_menu\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Graphic menu templates with container boxes around each menu item.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \"@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab&display=swap'); .menu_boxes .container { display: inline-block; width: 300px; padding: 10px; font-family: 'Roboto Slab', serif; border: 1px solid #efefef; border-radius: 5px; margin: 5px; } .menu_boxes .container .image { object-fit: cover; } .menu_boxes .container .image img { display: block; width: 100%; height: 200px; margin: 5px 0 5px 0; } .menu_boxes .container .name { font-size: 16px; } .menu_boxes .container .price { font-size: 14px; display: block; } .menu_boxes .container .description { display: block; font-size: 14px; } .menu_boxes .pagination a, .menu_boxes .pagination span { margin: 2px; padding: 3px; }\",\r\n        containerClassNames: [\"menu_boxes\"],\r\n        colorTheme: [\"#efefef\", \"#000\"],\r\n        properties: {},\r\n        componentProperties: {}\r\n    },\r\n    \"menu_box_list\": {\r\n        _id: \"\",\r\n        shortId: \"menu_box_list\",\r\n        name: \"Boxed List\",\r\n        compatibleWith: [\"graphic_menu\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Graphic menu templates with stacked container boxes displayed like a list.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \"@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab&display=swap'); .menu_box_list .container { display: inline-block; width: 400px; height: 100px; padding: 5px; font-family: 'Roboto Slab', serif; border: 1px solid #efefef; border-radius: 5px; margin: 5px; } .menu_box_list .container .image { height: 100px; float: right; } .menu_box_list .container .image img { display: block; width: 100px; height: 100px; object-fit: cover; } .menu_box_list .container .name { font-size: 16px; margin-bottom: 5px; } .menu_box_list .container .price { font-size: 14px; display: block; margin-bottom: 10px } .menu_box_list .container .description { display: block; font-size: 14px; } .menu_box_list .pagination a, .menu_box_list .pagination span { margin: 2px; padding: 3px; }\",\r\n        containerClassNames: [\"menu_box_list\"],\r\n        colorTheme: [\"#efefef\", \"#000\"],\r\n        properties: {},\r\n        componentProperties: {}\r\n    },\r\n    \"job_posting_plain\": {\r\n        _id: \"\",\r\n        shortId: \"job_posting_plain\",\r\n        name: \"Plain\",\r\n        compatibleWith: [\"job_postings\"],\r\n        ownerId: \"\",\r\n        version: 1,\r\n        previewImageUrls: [],\r\n        description: \"Plain job postings style.\",\r\n        visibility: \"PUBLIC\",\r\n        style: \"@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap'); .job_posting_plain .container a { color: #000; text-decoration: none; } .job_posting_plain .container a:hover { text-decoration: underline; } .job_posting_plain .container { display: block; font-family: 'Open Sans', sans-serif; border-top: 1px solid #aaa; margin: 5px 0 5px 0; padding: 15px 0 15px 0; } .job_posting_plain .container .title { font-size: 20px; margin-bottom: 5px; } .job_posting_plain .container .description { display: block; font-size: 16px; } .job_posting_plain .pagination a, .job_posting_plain .pagination span { margin: 2px; padding: 3px; }\",\r\n        containerClassNames: [\"job_posting_plain\"],\r\n        colorTheme: [\"#fff\", \"#000\", \"#aaa\"],\r\n        properties: {},\r\n        componentProperties: {}\r\n    }\r\n};\n\nexport { DataSourceFieldType, PaginationStyle, SortBy, ViewComponentType, ViewType, formattedField, inferDataSourceFieldType, isDate, isEmail, isUri, style_cache, template_cache };\n//# sourceMappingURL=library.es.js.map\n","import Chart from 'chart.js/auto';\nimport { ChartType } from \"chart.js\";\nimport { dataField, tableViewResponse, DataSourceFieldType, PaginationStyle, ViewType, template_cache, style_cache } from \"@airjam/types\";\n\nconst SERVING_DATA_URL: string = \"http://airjam.co/s/data?id=\";\n//const SERVING_DATA_URL: string = \"http://localhost:3001/s/data?id=\";\nconst PAGINATION_SHOW_SIZE: number = 7;\nlet currentPage: {[id: string]: number} = {}; // global variable that keeps track of current page.\n\nexport default function fetchAndRenderData() {\n  if (window && window.document) {\n    const tableViews = document.querySelectorAll('[display=\"airjam-tableview\"]');\n    tableViews.forEach(view => {\n      if (!view.getAttribute(\"id\")) {\n        view.innerHTML = \"Please set id attribute to a valid table view id.\";\n        return;\n      }\n      const viewId = view.getAttribute(\"id\")!;\n      const page: number = 1;\n      currentPage[viewId] = 1;\n      fetch(SERVING_DATA_URL + viewId + \"&page=\" + page).then(result => {\n        result.json().then((fetchedData: tableViewResponse) => {\n          const template = getTemplate(fetchedData);\n          const style = getStyle(fetchedData);\n          if (style.containerClassNames && Array.isArray(style.containerClassNames)) view.className += \" \" + style.containerClassNames.join(\" \");\n          const styleElement = document.createElement('style');\n          styleElement.appendChild(window.document.createTextNode(style.style));\n          window.document.head.appendChild(styleElement);\n          const viewType = ViewType[fetchedData.type.valueOf() as keyof typeof ViewType];\n          switch(viewType) {\n            case ViewType.Graph:\n              renderGraphToView(viewId, view, fetchedData, template, style);\n              break;\n            case ViewType.Table:\n              renderTableToView(viewId, view, fetchedData, template, style);\n              break;\n            case ViewType.List:\n            case ViewType.Gallery:\n              renderCollectionToView(viewId, view, fetchedData, template, style);\n              break;\n            default:\n              // not yet implemented\n          }\n        });\n      });\n    });\n  }\n}\n\nfunction fetchAndRerenderData(viewId: string, view: Element, page: number = 1) {\n  if (window && window.document) {\n    currentPage[viewId] = page;\n    fetch(SERVING_DATA_URL + viewId + \"&page=\" + page).then(result => {\n      result.json().then((fetchedData: tableViewResponse) => {\n        const template = getTemplate(fetchedData);\n        const style = getStyle(fetchedData);\n        view.innerHTML = \"\"; // clear out just the content and reload\n        const viewType = ViewType[fetchedData.type.valueOf() as keyof typeof ViewType];\n        switch(viewType) {\n          case ViewType.Graph:\n            renderGraphToView(viewId, view, fetchedData, template, style);\n            break;\n          case ViewType.Table:\n            renderTableToView(viewId, view, fetchedData, template, style);\n            break;\n          case ViewType.List:\n          case ViewType.Gallery:\n            renderCollectionToView(viewId, view, fetchedData, template, style);\n            break;\n          default:\n            // not yet implemented\n        }\n      });\n    });\n  }\n}\n\nfunction renderCollectionToView(viewId: string, view: Element, fetchedData: tableViewResponse, template: any, style: any) {\n  if (!template.templateFields || !template.templateContent || !fetchedData.templateFields) {\n    console.log(viewId + \" will not be rendered because it does not have required template attributes.\");\n    return;\n  }\n  // ignore the first row in data, since it is assumed to be a label row\n  for (let i = 1; i < fetchedData.data.length; i++) {\n    const currentRow = fetchedData.data[i];\n    const templateMap: {[id: string]: string} = {};\n    Object.keys(template.templateFields).forEach((field: string) => {\n      if (fetchedData.templateFields[field] && currentRow[fetchedData.templateFields[field]]) {\n        templateMap[field] = currentRow[fetchedData.templateFields[field]].raw_value;\n      }\n    });\n\n    let templateContent = template.templateContent;\n    Object.entries(templateMap).forEach((entry: any[]) => {\n      const key = entry[0];\n      const value = entry[1];\n      templateContent = templateContent.replaceAll( \"{{\" + key + \"}}\", value); // todo templating engine will allow pass by map\n    });\n    view.innerHTML += templateContent;\n    }\n    if (fetchedData.paginationStyle === PaginationStyle.Paged) {\n      renderPagination(viewId, view, fetchedData);\n    }\n}\n\nfunction renderPagination(viewId: string, view: Element, fetchedData: tableViewResponse) {\n  const pagingSection = window.document.createElement(\"div\");\n  pagingSection.className = \"pagination\";\n  view.appendChild(pagingSection);\n  let leftPtr = currentPage[viewId] ? currentPage[viewId] : 1;\n  let rightPtr = currentPage[viewId] ? currentPage[viewId] : 1;\n  if (fetchedData.totalPages <= PAGINATION_SHOW_SIZE) {\n    leftPtr = 1;\n    rightPtr = fetchedData.totalPages;\n  } else {\n    let pagesLeft = PAGINATION_SHOW_SIZE;\n    while (pagesLeft > 0) {\n      if (leftPtr > 1) { leftPtr--; pagesLeft--; }\n      if (rightPtr <= fetchedData.totalPages) { rightPtr++; pagesLeft--; }\n    }\n  }\n\n  pagingSection.appendChild(makePageLink(viewId, view, 1, \"<<\"));\n  for (let i = 1; i <= fetchedData.totalPages; i++) {\n    pagingSection.appendChild(makePageLink(viewId, view, i, null));\n  }\n  pagingSection.appendChild(makePageLink(viewId, view, fetchedData.totalPages, \">>\"));\n}\n\nfunction makePageLink(viewId: string, view: Element, pageNumber: number, linkText: string | null): Element {\n  if (currentPage[viewId] === pageNumber) {\n    const textElement = window.document.createElement(\"span\");\n    textElement.innerText = pageNumber.toString();\n    if (linkText) textElement.innerText = linkText;\n    return textElement;\n  } else {\n    const linkElement = window.document.createElement(\"a\");\n    linkElement.onclick = function() { fetchAndRerenderData(viewId, view, pageNumber); };\n    linkElement.innerText = pageNumber.toString();\n    if (linkText) linkElement.innerText = linkText;\n    linkElement.style.cursor = \"pointer\";\n    return linkElement\n  }\n}\n\nfunction renderTableToView(viewId: string, view: Element, fetchedData: tableViewResponse, template: any, style: any) {\n  let caption: string = \"\";\n  if (fetchedData.templateProperties && fetchedData.templateProperties.caption) {\n    caption = fetchedData.templateProperties.caption;\n  }\n  let striped: boolean = false;\n  if (fetchedData.templateProperties && fetchedData.templateProperties.striped) {\n    striped = fetchedData.templateProperties.striped.toLowerCase() === \"true\";\n  }\n  const dataMatrix = dataToTableMatrix(fetchedData);\n  if (dataMatrix && dataMatrix.length) {\n    let table = window.document.createElement(\"table\");\n    table.className=\"table table-hover\";\n    if (striped) table.className += \" table-striped \";\n    view.appendChild(table);\n    if (caption) {\n      let captionElem = window.document.createElement(\"caption\");\n      captionElem.innerHTML = caption;\n    }\n    let tableHead = window.document.createElement(\"thead\");\n    let tableBody = window.document.createElement(\"tbody\");\n    table.appendChild(tableHead);\n    table.appendChild(tableBody);\n    dataMatrix.forEach((dataRow: any[], rowIdx: number) => {\n      let tableRow = window.document.createElement(\"tr\");\n      tableRow.className = evenOrOdd(rowIdx + 1);\n      if (rowIdx === 0) {\n        tableHead.appendChild(tableRow);\n      } else {\n        tableBody.appendChild(tableRow);\n      }\n      dataRow.forEach((data: any, colIdx: number) => {\n        let cell = rowIdx === 0 ? window.document.createElement(\"th\") : window.document.createElement(\"td\");\n        cell.appendChild(renderData(data));\n        cell.className = evenOrOdd(colIdx + 1);\n        tableRow.appendChild(cell);\n      });\n    });\n  }\n}\n\nfunction renderData(data: dataField): HTMLElement {\n  // todo(minjae): add more data renderer for data types\n  const span = window.document.createElement(\"span\");\n  switch(data.display_as) {\n    case DataSourceFieldType.Link:\n      const linkElement = window.document.createElement(\"a\");\n      linkElement.href = data.raw_value;\n      linkElement.innerText = data.raw_value;\n      span.appendChild(linkElement);\n      break;\n    default:\n      span.innerText = data.raw_value;\n  }\n  return span;\n}\n\nfunction renderGraphToView(viewId: string, view: Element, fetchedData: tableViewResponse, template: any, style: any) {\n  if (!template.compatibleDisplayType || !Array.isArray(template.compatibleDisplayType)) return;\n  if (template.compatibleDisplayType.filter((t: string) => t === \"graph\")) {\n    renderChartToView(viewId, view, fetchedData, template, style);\n  }\n}\n\nfunction renderChartToView(viewId: string, view: Element, fetchedData: tableViewResponse, template: any, style: any) {\n  // initiate template and style data\n  let chartType : ChartType = \"bar\";\n  if (template.componentProperties && template.componentProperties.chartType) chartType = template.componentProperties.chartType;\n  let firstColumnAsLabel = (fetchedData.templateProperties && fetchedData.templateProperties.useFirstColumnAsLabels && fetchedData.templateProperties.useFirstColumnAsLabels as Boolean);\n  let showLegends: boolean = true;\n  if (fetchedData.templateProperties && fetchedData.templateProperties.showLegends && (fetchedData.templateProperties.showLegends.toLowerCase() === \"false\")) {\n    showLegends = false;\n  }\n  let indexAxis: \"x\" | \"y\" = \"x\";\n  if (fetchedData.templateProperties && fetchedData.templateProperties.showVertically && fetchedData.templateProperties.showVertically.toString().toLowerCase() === \"true\") {\n    indexAxis = \"y\";\n  }\n  let borderWidth = 0;\n  if (style.componentProperties && style.componentProperties.borderWidth) borderWidth = Number(style.componentProperties.borderWidth);\n  let chartColors: string[] = [];\n  if (style.componentProperties && style.componentProperties.chartColors && Array.isArray(style.componentProperties.chartColors)) chartColors = style.componentProperties.chartColors;\n\n  // if fetchedData view as graph, and properties client component is chart\n  const dataMatrix = dataToTableMatrix(fetchedData);\n  if (dataMatrix && dataMatrix.length) {\n    // first row is assumed to be labels for this component\n    const labelRow = dataMatrix[0].map((value: dataField) => {\n      return value.raw_value;\n    });\n    const dataRows = [];\n    for (let i = 1; i < dataMatrix.length; i++) {\n      const dataArr = dataMatrix[i].map((value: dataField) => {\n        return value.raw_value;\n      });\n      fetchedData.data.forEach(() => { chartColors = rotateArray(chartColors, true) }); // rotate the colors far enough to hopefully not get duplicates\n      dataRows.push({\n          label: firstColumnAsLabel ? dataArr[0] : undefined,\n          data: firstColumnAsLabel ? dataArr.slice(1) : dataArr,\n          borderWidth: borderWidth,\n          borderColor: chartColors.slice(),\n          backgroundColor: chartColors.slice()\n      });\n    }\n    let canvas = window.document.createElement(\"canvas\");\n    canvas.id = viewId;\n    view.appendChild(canvas);\n    const chart = new Chart(canvas, {\n      type: chartType,\n      data: {\n        labels: firstColumnAsLabel ? labelRow.slice(1) : labelRow,\n        datasets: dataRows,\n      },\n      options: {\n        indexAxis: indexAxis,\n        plugins: {\n          legend: {\n            display: showLegends\n          }\n        }\n      }\n    });\n  }\n}\n\nfunction dataToTableMatrix(fetchedData: tableViewResponse): dataField[][] {\n  const dataRows: dataField[][] = [];\n  if (fetchedData.data && fetchedData.data.length) {\n    const keys = Object.keys(fetchedData.data[0]);\n    const keyMap: {[id: string]: number} = {};\n    keys.forEach((key: string, index: number) => { keyMap[key] = index });\n    fetchedData.data.forEach((currentDataRow: {[id: string]: dataField}) => {\n      const rowData: dataField[] = [];\n      Object.entries(currentDataRow).forEach((entry: any[]) => {\n        rowData[keyMap[entry[0]]] = entry[1];\n      });\n      dataRows.push(rowData);\n    });\n  }\n  return dataRows;\n}\n\nfunction itemInRotatingWindow(window: any[], index: number): any {\n  return window.length ? window[(index - 1) % window.length] : undefined\n}\n\nfunction evenOrOdd(index: number): string {\n  return index % 2 ? \"odd\" : \"even\";\n}\n\nfunction rotateArray(arr: any[], reverse: boolean): any[] {\n  if (reverse) arr.unshift(arr.pop());\n  else arr.push(arr.shift());\n  return arr;\n}\n\nfunction getTemplate(fetchedData: tableViewResponse): any {\n  const cached_entry = Object.entries(template_cache).filter(value => value[0] === fetchedData.templateId);\n  if (cached_entry && cached_entry[0] && cached_entry[0].length > 1) {\n    return cached_entry[0][1];\n  }\n  // return the template data response returned itself.\n}\n\nfunction getStyle(fetchedData: tableViewResponse): any {\n  const cached_entry = Object.entries(style_cache).filter(value => value[0] === fetchedData.styleId);\n  if (cached_entry && cached_entry[0] && cached_entry[0].length > 1) {\n    return cached_entry[0][1];\n  }\n  // return the style data response returned itself.\n}\n\nfetchAndRenderData();"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","_top","_bottom","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","startEnd","swap","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","positionAxisID1","value1","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","i1","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","hLimits","vLimits","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","ViewComponentType","ViewType","PaginationStyle","DataSourceFieldType","SortBy","template_cache","card_list","_id","shortId","compatibleWith","compatibleDisplayType","List","Gallery","ownerId","previewImageUrls","description","visibility","pages","templateContent","templateFields","compatibleTypes","link","Link","linkText","thumbnail","componentProperties","standard_table","Table","caption","default","striped","barchart","Graph","useFirstColumnAsLabels","showLegends","showVertically","chartType","piechart","linechart","formal_menu","price","graphic_menu","image","job_postings","style_cache","muted","containerClassNames","chartColors","multiple","colorTheme","earthy","outback","concise_gallery","fine_dining","contemporary_fine_dining","healthy_five","menu_boxes","menu_box_list","job_posting_plain","SERVING_DATA_URL","PAGINATION_SHOW_SIZE","currentPage","fetchAndRenderData","querySelectorAll","view","viewId","fetch","json","fetchedData","template","getTemplate","className","styleElement","createElement","appendChild","createTextNode","valueOf","renderGraphToView","renderTableToView","renderCollectionToView","innerHTML","fetchAndRerenderData","page","currentRow","templateMap","field","raw_value","replaceAll","paginationStyle","Paged","renderPagination","log","pagingSection","leftPtr","rightPtr","totalPages","pagesLeft","makePageLink","pageNumber","textElement","innerText","linkElement","onclick","templateProperties","dataMatrix","dataToTableMatrix","tableHead_1","tableBody_1","dataRow","rowIdx","tableRow","evenOrOdd","colIdx","cell","renderData","display_as","href","renderChartToView","firstColumnAsLabel","labelRow","dataRows","dataArr","rotateArray","keyMap_1","currentDataRow","rowData","cached_entry","templateId","styleId"],"mappings":"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"}